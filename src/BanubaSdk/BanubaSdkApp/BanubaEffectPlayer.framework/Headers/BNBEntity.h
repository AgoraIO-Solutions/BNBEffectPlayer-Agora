// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from scene.djinni

#import "BNBComponentType.h"
#import <Foundation/Foundation.h>
@class BNBComponent;
@class BNBEntity;
@class BNBLayer;


/**
 * A structure element of the scene.
 *
 * To construct a scene, you should form a hierarchy of entities to create its
 * structure, then add different components such as lights, cameras, and
 * geometry to entities to create visible content.
 *
 * Each entity has a name which could be used for finding the entity in a hierarchy.
 *
 * Entities in the scene form a tree hierarchy between parents and children.
 *
 * Each entity could be in an enabled or disabled state. The disabling of the entity
 * is equivalent to removing the entity and all its children from the hierarchy.
 *
 * An entity is a container for components. Each entity could contain several components,
 * but only one component of each component type. The Transform component is mandatory
 * and it implicitly placed in each entity.
 *
 */
@interface BNBEntity : NSObject

+ (nullable BNBEntity *)create:(nonnull NSString *)name;

/** Set a new name to the entity. Name could be empty. */
- (void)setName:(nonnull NSString *)name;

- (nonnull NSString *)getName;

- (void)addChild:(nullable BNBEntity *)child;

- (void)removeChild:(nullable BNBEntity *)child;

- (nonnull NSArray<BNBEntity *> *)getChildren;

- (void)clearChildren;

/**
 * Perform depth-first traverse of entity tree.
 * Return first found child with name `entityName` or NULL if such an entity doesn't exist.
 */
- (nullable BNBEntity *)findChildByName:(nonnull NSString *)entityName;

- (nullable BNBEntity *)getParent;

- (void)setActive:(BOOL)active;

- (BOOL)isActive;

- (void)addIntoLayer:(nullable BNBLayer *)layer;

- (void)removeFromLayer;

- (nullable BNBLayer *)getLayer;

- (void)addComponent:(nullable BNBComponent *)component;

- (BOOL)hasComponent:(BNBComponentType)type;

- (nullable BNBComponent *)getComponent:(BNBComponentType)type;

- (void)removeComponent:(nullable BNBComponent *)component;

@end
